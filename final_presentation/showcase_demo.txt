Plan a FIVE-minute "showcase" demo that highlights your application and demonstrates MVP (minimal viable product).  Write a human-executable script explaining what you plan to show and what you plan to say, practice the demo to make sure everything works and fits in the time allotted, and include this script in your github repository. Make sure to tag the exact file versions to be used for the demo.  Note this "showcase" demo will be presented on demo day.  Thus you need to submit this document before the demo, not after.  


The script has been written and included in the GitHub repository. However, the exact file version has not been tagged yet as still some changes need to be made prior to the demo.

Human-Executable Script is below:

Hello,

We are proudly presenting our version of trade Wizard, a sophisticated and efficient application enabling trading of ETFs.

We believe we were able to complete all functionalities as requested during the former presentations.


First, the application will be briefly introduced before delving into the details of the wide range of functionalities implemented.

The application's code is reliable, well-implemented and documented, and thus enables for easy expansion.

The expansion could relate to trading of different financial products or implemented further functions.
The default trading strategy is TWAP as requested.  

However, we designed the application in a way that this list of trading strategies could be easily expanded.

We believe the best way to demonstrate the application's functionalities will be through an example.

Hence, I will be a trader in the next few minutes.

First, I need to create an account.

I can do that by clicking here, filling out necessary information, and confirming.

Once I have created the account I can log in.

I do it with the information I user for creating the account

And consequently log out.

By clicking 'logout'  at the top of the page.

Let me log back in again to demonstrate further functions.

Again with the same user information and password.


Now, I want to place a new sell order.

Hence, I click 'Place Order'

Hence, I pick the following parameters and click sell.

Maybe I want to place a new buy order.

Hence, I pick the following parameters and click buy.

I can view the list of trades here.

If I click on this trade in the table, I can display a separate list of parent and child trades.

In order to trade better, I would like to see graph from the exchange which is placed right here.

There is a variety of graphs to help me with trading decisions.

{Complete explanation as graphs implemented}

I am also able to cancel pending trades in the following way.

I click Cancel on the trade in the table.

The status of each trade is explained in this row.

As you can see I can read a variety of information.

Consequently, we shall briefly explain our design decisions made for the user interface. 

The application looks professional and is easy to understand by the user.

Furthermore,the design was implemented so that it is difficult for the user to submit a trade by accidence.

Please let us know if you would want us to make any changes.

OK, we will implement them in the next iteration.

We greatly value your feedback.

Thank you for your comments.


The expected procedure of the demo:


First, the application will be briefly introduced before delving into the details of the wide range of functionalities implemented.


Consequently, the application will be introduced from the viewpoint of a user.  Hence, one of the team members shall start working with the application as if he were a trader. Nevertheless, each step will be described in more detail than if solely a user was clicking the required buttons. As the code is well-written and documented, the team needs to inform the customer. Otherwise, the customer would not know since he/she would check merely the user interface.

The variety of functions to introduce includes but is not limited to:

1. Creating an account
2. Logging in
3. Logging out
4. Placing sell orders
5. Placing buy orders
6. Viewing all trades
7. Viewing a separate list of child and parent trades
8. Viewing graphs directly interacting with the exchange
9. Cancelling pending orders
10. Displaying the status of each trade

Consequently, we shall briefly explain the design decisions made for the user interface. 

Ultimately, we shall ask the customer whether anything else needs to be completed and thank him for his patience and collaboration.

Afterward, we shall hearken to his/her comments.


